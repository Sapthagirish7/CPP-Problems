Say you have an array, A, for which the ith element is the price of a given stock on day i.

Design an algorithm to find the maximum profit. You may complete at most 2 transactions.

Return the maximum possible profit.

Intitutive appraoch using dp:
int n=A.size();
    if(n<=1) return 0;
    vector<int>left(n),right(n);
    int lmin=A[0],rmax=A[n-1];
    left[0]=0;right[n-1]=0;
    for(int i=1;i<n;i++){
       lmin=min(lmin,A[i]);
       left[i]=max(left[i-1],A[i]-lmin);
    }
    for(int i=n-2;i>=0;i--){
       rmax=max(rmax,A[i]);
       right[i]=max(right[i+1],rmax-A[i]);
    }
    int ans=left[n-1];
    for(int i=1;i<n;i++){
       ans=max(ans,left[i-1]+right[i]);
    }
    return ans;
    Time complexity : O(n)
