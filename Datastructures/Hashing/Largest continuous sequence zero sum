//Find the largest continuous sequence in a array which sums to zero.

Example:


Input:  {1 ,2 ,-2 ,4 ,-4}
Output: {2 ,-2 ,4 ,-4}


code:
vector<int> Solution::lszero(vector<int> &v) {
      map<int,int>mp;
     vector<int>temp;
     int sum = 0;
     int len = 0;
      mp[sum] = -1;         // if sum zero is found then elements from 0 to i must be included.
    for(int i = 0;i<v.size();i++){
         sum+=v[i];
        if(mp.find(sum)!=mp.end()){  //  if a particular element is found again it means that the elements in betwwen are sumed up to zero.
     
           if(i - mp[sum]>len){          // then  we check if its length is greater than max.
             len = i - mp[sum];
             temp.assign(v.begin()+mp[sum]+1,v.begin()+i+1);    
          }
        
       }
         else{
           mp[sum] = i;  
        }
    
     }
   return temp;
    
}
