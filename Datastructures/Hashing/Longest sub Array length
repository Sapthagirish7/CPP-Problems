Problem Description

Given an integer array A of size N containing 0's and 1's only.

You need to find the length of the longest subarray having count of 1’s one more than count of 0’s.



code:

int Solution::solve(vector<int> &A) {
    unordered_map<int,int>m;
    int sum=0,max_len=INT_MIN;
    for(int i=0;i<A.size();i++)
    {
        A[i]=(A[i]==0?-1:1); //We will change the zeros to -1 for ease
        // Now this problem has reduced to find the largest subarray with sum 1
        sum+=A[i];
        if(sum==1)
        {
            max_len=max(max_len,i+1);
        }
        if(m.find(sum)==m.end())
        {
            m[sum]=i;
        }
        if(m.find(sum-1)!=m.end())    // it will give the starting index of subarrays of sum 1,which is m[sum-1] 
        {
            max_len=max(max_len,i-m[sum-1]);
        }
    }
    return max_len;
}
